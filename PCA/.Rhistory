####Data load
data<-read.csv(file.choose())
head(data)
tail(data)
str(data)
rownames(data)<-c(data$Name)
head(data)
data1 <-data[,-1]
head(data1)
###Load the library
library("factoextra")
###Load the library
library("factoextra")
library("FactoMineR")
#PCA Analysis
res.pca <- PCA(data1, graph = F)
print(res.pca)
summary(res.pca)
res.pca <- PCA(data1, graph = TRUE)
####Eigenvalue Analysis
eig.val <- get_eigenvalue(res.pca)
eig.val
##Scree plot
fviz_eig(res.pca, choice = "eigenvalue", geom.="bar", barfill="green4", addlabels = TRUE)
## Percentage of explained variance
fviz_eig(res.pca, geom.="bar", barfill="green3", addlabels = TRUE, hjust = -0.8, ylim = c(0, 45))
# Contributions of variables to PC1
fviz_contrib(res.pca, choice = "var", axes = 1, top = 7)
# Contributions of variables to PC2
fviz_contrib(res.pca, choice = "var", axes = 2, top = 7)
### Quality check of PCA by Individuals
fviz_pca_ind(res.pca,col.ind="cos2",gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), repel=TRUE)
### Quality check of PCA by variables
fviz_pca_var(res.pca, arrowsize = 1.5, labelsize = 4, col.var = "contrib",gradient.cols = c("#FC4E07", "#E7B800", "blue"), repel = TRUE)
fviz_pca_biplot(res.pca, repel = TRUE,
col.var = "#2E9FDF",
col.ind = "#696969" )
###Cos2
fviz_pca_biplot(res.pca,
label = "var",
col.ind = "cos2",
col.var = "black",
gradient.cols = c("blue","green","red"))
###Contribution
fviz_pca_biplot(res.pca,
label = "var",
col.ind = "black",
col.var = "contrib",
gradient.cols = c("blue","green","red"))
fviz_pca_ind(iris.pca,
label = "all",
col.ind = data1$Cluster,
palette = c("#00AFBB", "green", "red", "#FC4E07"),addEllipses = TRUE, ellipse.type = "convex",legend.title = "Cluster"
)
###Data load
data<-read.csv(file.choose())
head(data)
tail(data)
str(data)
rownames(data)<-c(data$Name)
head(data)
newdata<-data[,-1]
head(newdata)
df1<-newdata
df <- na.omit(df1)
df <- scale(df1)
head(df)
##Dissimilarity matrix/distance matrix
res.dist<-dist(x=df,method="euclidean")
res.hc<-hclust(d=res.dist,method="ward.D2")
plot(x=res.hc) #plot 1
library(factoextra)
fviz_dend(x=res.hc,cex=0.7,lwd=0.7,rect = T) #plot 2
###Rectangle fill with no border
fviz_dend(x=res.hc,cex=1,lwd=0.8,k=5, k_colors="jco", xlab = " ", ylab = " ", main = " ", horiz=TRUE) #plot 3
###Rectangle fill with no border
fviz_dend(x=res.hc,cex=1,lwd=0.8,k=4, k_colors="jco", xlab = " ", ylab = " ", main = " ", horiz=TRUE) #plot 3
###Rectangle fill with border # plot 4
fviz_dend(x=res.hc,cex=0.8,lwd=0.8,k=4, rect=TRUE, rect_border="jco",  k_colors="jco", rect_fill=TRUE)
###Rectangle fill with rotted # plot 5
fviz_dend(x=res.hc,cex=0.8,lwd=0.8,k=4, rect=TRUE, rect_border="jco",  k_colors="jco", rect_fill=TRUE, horiz=TRUE)
###Rectangle fill with rotted with theme #plot 6
fviz_dend(res.hc,cex=0.8,lwd=0.8,k=4,rect=TRUE,k_colors="jco",rect_border="jco",rect_fill=TRUE,ggtheme=theme_classic())
### Circular type cluster #plot 7
fviz_dend(res.hc,cex=0.8,lwd=0.8,k=4,rect=TRUE, k_colors="jco",rect_border="jco",rect_fill=TRUE, type="circular")
### Phylogenic type cluster #plot 8
fviz_dend(res.hc,cex=0.8,lwd=0.8,k=4,rect=TRUE, k_colors="jco", rect_border="jco", rect_fill=TRUE, type="phylogenic")
### Phylogenic type cluster layout.gem #plot 9
fviz_dend(res.hc,cex=0.8,lwd=0.8,k=4,rect=TRUE, k_colors="jco",rect_border="jco", rect_fill=TRUE, type="phylogenic",repel=TRUE,phylo_layout="layout.gem")
### Phylogenic type cluster layout_as_tree #plot 10
fviz_dend(res.hc,cex=0.8,lwd=0.8,k=4,rect=TRUE, k_colors="jco",rect_border="jco",rect_fill=TRUE, type="phylogenic",repel=TRUE,phylo_layout="layout_as_tree")
### Circular type cluster #plot 7
fviz_dend(res.hc,cex=0.4,lwd=0.8,k=4,rect=TRUE, k_colors="jco",rect_border="jco",rect_fill=TRUE, type="circular")
### Circular type cluster #plot 7
fviz_dend(res.hc,cex=0.4,lwd=0.4,k=4,rect=TRUE, k_colors="jco",rect_border="jco",rect_fill=TRUE, type="circular")
my_data <- read.csv(file.choose())
head(my_data)
d<-my_data[,c(-1)]
d
cor(d)
mat <-cor(d)
library (corrplot)
corrplot(mat) #plot 1
corrplot(mat,method="color", type="lower")
corr_mat=cor(mat,method="s")
corr_mat[1:10,1:10]
corrplot(corr_mat)  #plot 3
# Draw corrplot with p-values
corrplot(mat,
p.mat = mat,
type= "lower")
library(metan)
ALL=corr_coef(d)
ALL
plot(ALL)
library(RColorBrewer)
M <-cor(d)
testRes = cor.mtest(d, conf.level = 0.95)
#plot 4
corrplot(M, p.mat = testRes$p, method = 'ellipse', diag = FALSE, type = 'full', sig.level = c(0.001, 0.01, 0.05), pch.cex = 1, insig = 'label_sig', pch.col = 'grey20', order = 'AOE')
#plot 5
corrplot(M, p.mat = testRes$p, method = 'color', diag = FALSE, type = 'upper',
sig.level = c(0.001, 0.01, 0.05), pch.cex = 2,
insig = 'label_sig', pch.col = 'grey20', order = 'AOE')
#plot 6
corrplot(M, p.mat = testRes$p, method = 'ellipse', diag = TRUE, type = 'lower',
sig.level = c(0.001, 0.01, 0.05), pch.cex = 2,
insig = 'label_sig', pch.col = 'green4', order = 'AOE')
#plot 7
corrplot(corr_mat, method = "color", outline = T, addgrid.col = "darkgray", order="hclust",
addrect = 4, rect.col = "black", rect.lwd = 5,cl.pos = "b", tl.col = "indianred4",
tl.cex = 1.5, cl.cex = 1.5, addCoef.col = "white", number.digits = 2, number.cex = 0.75,
col = colorRampPalette(c("darkred","white","midnightblue"))(100))
library(PerformanceAnalytics)
chart.Correlation(cor(d)) #chart 1
library(lares)
corr_cross(d, rm.na = T, max_pvalue = 0.05, top = 15, grid = T) #plot 8
corr_cross(d, type = 2, top = NA) #plot 9
####Data load
data<-read.csv(file.choose())
head(data)
tail(data)
str(data)
head(data)
rownames(data)<-c(data$Name)
head(data)
data1 <-data[,-1]
head(data1)
###Load the library
library("factoextra")
###Load the library
library("factoextra")
library("FactoMineR")
#PCA Analysis
res.pca <- PCA(data1, graph = F)
print(res.pca)
summary(res.pca)
res.pca <- PCA(data1, graph = TRUE)
####Eigenvalue Analysis
eig.val <- get_eigenvalue(res.pca)
eig.val
##Scree plot
fviz_eig(res.pca, choice = "eigenvalue", geom.="bar", barfill="green4", addlabels = TRUE)
## Percentage of explained variance
fviz_eig(res.pca, geom.="bar", barfill="green3", addlabels = TRUE, hjust = -0.8, ylim = c(0, 45))
# Contributions of variables to PC1
fviz_contrib(res.pca, choice = "var", axes = 1, top = 7)
# Contributions of variables to PC2
fviz_contrib(res.pca, choice = "var", axes = 2, top = 7)
### Quality check of PCA by Individuals
fviz_pca_ind(res.pca,col.ind="cos2",gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), repel=TRUE)
### Quality check of PCA by variables
fviz_pca_var(res.pca, arrowsize = 1.5, labelsize = 4, col.var = "contrib",gradient.cols = c("#FC4E07", "#E7B800", "blue"), repel = TRUE)
fviz_pca_biplot(res.pca, repel = TRUE,
col.var = "#2E9FDF",
col.ind = "#696969" )
###Cos2
fviz_pca_biplot(res.pca,
label = "var",
col.ind = "cos2",
col.var = "black",
gradient.cols = c("blue","green","red"))
